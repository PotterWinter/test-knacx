"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/context/dark-mode-context.tsx":
/*!*******************************************!*\
  !*** ./src/context/dark-mode-context.tsx ***!
  \*******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DarkModeProvider: () => (/* binding */ DarkModeProvider),\n/* harmony export */   useDarkMode: () => (/* binding */ useDarkMode)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\nconst DarkModeContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nfunction DarkModeProvider(param) {\n    let { children } = param;\n    _s();\n    const [isDarkMode, setIsDarkMode] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"DarkModeProvider.useEffect\": ()=>{\n            const savedMode = localStorage.getItem(\"darkMode\") === \"true\";\n            setIsDarkMode(savedMode);\n        }\n    }[\"DarkModeProvider.useEffect\"], []);\n    function toggleDarkMode() {\n        setIsDarkMode((prevMode)=>{\n            const newMode = !prevMode;\n            localStorage.setItem(\"darkMode\", newMode ? \"true\" : \"false\");\n            return newMode;\n        });\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(DarkModeContext.Provider, {\n        value: {\n            isDarkMode,\n            toggleDarkMode\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/natthanat/Desktop/test-knacx/src/context/dark-mode-context.tsx\",\n        lineNumber: 39,\n        columnNumber: 5\n    }, this);\n}\n_s(DarkModeProvider, \"bUs4CHDjU8AH+ZZYt8wlh4bHppI=\");\n_c = DarkModeProvider;\nfunction useDarkMode() {\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(DarkModeContext);\n    if (!context) {\n        throw new Error(\"useDarMode must be used within a DarkModeProvider\");\n    }\n    return context;\n}\n_s1(useDarkMode, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"DarkModeProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29udGV4dC9kYXJrLW1vZGUtY29udGV4dC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFNZTtBQU9mLE1BQU1JLGdDQUFrQkosb0RBQWFBLENBQ25DSztBQU9LLFNBQVNDLGlCQUFpQixLQUFtQztRQUFuQyxFQUFFQyxRQUFRLEVBQXlCLEdBQW5DOztJQUMvQixNQUFNLENBQUNDLFlBQVlDLGNBQWMsR0FBR1IsK0NBQVFBLENBQVU7SUFFdERFLGdEQUFTQTtzQ0FBQztZQUNSLE1BQU1PLFlBQVlDLGFBQWFDLE9BQU8sQ0FBQyxnQkFBZ0I7WUFDdkRILGNBQWNDO1FBQ2hCO3FDQUFHLEVBQUU7SUFFTCxTQUFTRztRQUNQSixjQUFjLENBQUNLO1lBQ2IsTUFBTUMsVUFBVSxDQUFDRDtZQUNqQkgsYUFBYUssT0FBTyxDQUFDLFlBQVlELFVBQVUsU0FBUztZQUNwRCxPQUFPQTtRQUNUO0lBQ0Y7SUFFQSxxQkFDRSw4REFBQ1gsZ0JBQWdCYSxRQUFRO1FBQUNDLE9BQU87WUFBRVY7WUFBWUs7UUFBZTtrQkFDM0ROOzs7Ozs7QUFHUDtHQXJCZ0JEO0tBQUFBO0FBdUJULFNBQVNhOztJQUNkLE1BQU1DLFVBQVVsQixpREFBVUEsQ0FBQ0U7SUFDM0IsSUFBSSxDQUFDZ0IsU0FBUztRQUNaLE1BQU0sSUFBSUMsTUFBTTtJQUNsQjtJQUNBLE9BQU9EO0FBQ1Q7SUFOZ0JEIiwic291cmNlcyI6WyIvVXNlcnMvbmF0dGhhbmF0L0Rlc2t0b3AvdGVzdC1rbmFjeC9zcmMvY29udGV4dC9kYXJrLW1vZGUtY29udGV4dC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgY3JlYXRlQ29udGV4dCxcbiAgdXNlU3RhdGUsXG4gIFJlYWN0Tm9kZSxcbiAgdXNlQ29udGV4dCxcbiAgdXNlRWZmZWN0LFxufSBmcm9tIFwicmVhY3RcIjtcblxuaW50ZXJmYWNlIERhcmtNb2RlQ29udGV4dFR5cGUge1xuICBpc0RhcmtNb2RlOiBib29sZWFuO1xuICB0b2dnbGVEYXJrTW9kZTogKCkgPT4gdm9pZDtcbn1cblxuY29uc3QgRGFya01vZGVDb250ZXh0ID0gY3JlYXRlQ29udGV4dDxEYXJrTW9kZUNvbnRleHRUeXBlIHwgdW5kZWZpbmVkPihcbiAgdW5kZWZpbmVkXG4pO1xuXG5pbnRlcmZhY2UgRGFya01vZGVQcm92aWRlclByb3BzIHtcbiAgY2hpbGRyZW46IFJlYWN0Tm9kZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIERhcmtNb2RlUHJvdmlkZXIoeyBjaGlsZHJlbiB9OiBEYXJrTW9kZVByb3ZpZGVyUHJvcHMpIHtcbiAgY29uc3QgW2lzRGFya01vZGUsIHNldElzRGFya01vZGVdID0gdXNlU3RhdGU8Ym9vbGVhbj4oZmFsc2UpO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3Qgc2F2ZWRNb2RlID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJkYXJrTW9kZVwiKSA9PT0gXCJ0cnVlXCI7XG4gICAgc2V0SXNEYXJrTW9kZShzYXZlZE1vZGUpO1xuICB9LCBbXSk7XG5cbiAgZnVuY3Rpb24gdG9nZ2xlRGFya01vZGUoKSB7XG4gICAgc2V0SXNEYXJrTW9kZSgocHJldk1vZGUpID0+IHtcbiAgICAgIGNvbnN0IG5ld01vZGUgPSAhcHJldk1vZGU7XG4gICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcImRhcmtNb2RlXCIsIG5ld01vZGUgPyBcInRydWVcIiA6IFwiZmFsc2VcIik7XG4gICAgICByZXR1cm4gbmV3TW9kZTtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPERhcmtNb2RlQ29udGV4dC5Qcm92aWRlciB2YWx1ZT17eyBpc0RhcmtNb2RlLCB0b2dnbGVEYXJrTW9kZSB9fT5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L0RhcmtNb2RlQ29udGV4dC5Qcm92aWRlcj5cbiAgKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVzZURhcmtNb2RlKCkge1xuICBjb25zdCBjb250ZXh0ID0gdXNlQ29udGV4dChEYXJrTW9kZUNvbnRleHQpO1xuICBpZiAoIWNvbnRleHQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJ1c2VEYXJNb2RlIG11c3QgYmUgdXNlZCB3aXRoaW4gYSBEYXJrTW9kZVByb3ZpZGVyXCIpO1xuICB9XG4gIHJldHVybiBjb250ZXh0O1xufVxuIl0sIm5hbWVzIjpbImNyZWF0ZUNvbnRleHQiLCJ1c2VTdGF0ZSIsInVzZUNvbnRleHQiLCJ1c2VFZmZlY3QiLCJEYXJrTW9kZUNvbnRleHQiLCJ1bmRlZmluZWQiLCJEYXJrTW9kZVByb3ZpZGVyIiwiY2hpbGRyZW4iLCJpc0RhcmtNb2RlIiwic2V0SXNEYXJrTW9kZSIsInNhdmVkTW9kZSIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJ0b2dnbGVEYXJrTW9kZSIsInByZXZNb2RlIiwibmV3TW9kZSIsInNldEl0ZW0iLCJQcm92aWRlciIsInZhbHVlIiwidXNlRGFya01vZGUiLCJjb250ZXh0IiwiRXJyb3IiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/context/dark-mode-context.tsx\n"));

/***/ })

});